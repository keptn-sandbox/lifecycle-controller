name: Load Tests
on:
  workflow_call:
    inputs:
      functions_runtime_tag:
        description: "Tag for the functions runner image"
        type: "string"
        required: true
env:
  GO_VERSION: "~1.19"
  # renovate: datasource=github-tags depName=cloud-bulldozer/kube-burner
  KUBE_BURNER_VERSION: "v1.3"
defaults:
  run:
    shell: bash

jobs:
  run-load-test:
    name: Run load Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup cluster
        uses: ./.github/actions/deploy-klt-on-cluster
        with:
          functions_runtime_tag: ${{ inputs.functions_runtime_tag }}

      - name: Install and expose Prometheus
        working-directory: ./test/load
        run: |
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply --server-side -f ./assets/prometheus/setup
          kubectl wait --for=condition=Established --all CustomResourceDefinition --namespace=monitoring
          kubectl apply -f ./assets/prometheus/
          kubectl wait --for=condition=available deployment/prometheus-operator -n monitoring --timeout=120s
          kubectl wait --for=condition=available deployment/prometheus-adapter -n monitoring --timeout=120s
          kubectl wait --for=condition=available deployment/kube-state-metrics -n monitoring --timeout=120s
          kubectl wait pod/prometheus-k8s-0 --for=condition=ready --timeout=120s -n monitoring
          kubectl -n monitoring port-forward svc/prometheus-k8s 9090 &
          kubectl -n monitoring port-forward svc/node-exporter 9100 &

          # wait for port 9090 to become available
          while ! nc -vz localhost 9090 > /dev/null 2>&1 ; do
            echo "Sleeping until port-forward for Prometheus at port 9090 is ready..."
            sleep 5
          done

          # wait until node exporter is available
          while ! nc -vz localhost 9100 > /dev/null 2>&1 ; do
            echo "Sleeping until port-forward for node exporter at port 9100 is ready..."
            sleep 5
          done

      - name: Download kube-burner
        run: |
          curl -fL https://github.com/cloud-bulldozer/kube-burner/releases/download/${{ env.KUBE_BURNER_VERSION }}/kube-burner-${KUBE_BURNER_VERSION#v}-Linux-x86_64.tar.gz -o kube-burner-${KUBE_BURNER_VERSION#v}-Linux-x86_64.tar.gz
          tar -xf kube-burner-${KUBE_BURNER_VERSION#v}-Linux-x86_64.tar.gz
          mv kube-burner /usr/local/bin
          sleep 60 # wait to have the node exporter ready already with 60s of data before starting the test

      - name: Run load Tests
        run: make load-test

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: load-tests-results
          path: ./collected-metrics
      
      - name: Create reports
        if: always()
        working-directory: ./.github/scripts
        run: ./create-reports-toolkit.sh

      - name: Upload cluster logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs-load-tests
          path: .github/scripts/logs
